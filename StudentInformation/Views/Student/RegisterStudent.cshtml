@model StudentInformation.Models.Student

@{
    var genderList = new List<SelectListItem>
    {
        new SelectListItem { Text = "Male", Value = "Male" },
        new SelectListItem { Text = "Female", Value = "Female" }
    };
}

<h3 class="mt-4">Register Student Information</h3>

<form id="registerForm" asp-action="RegisterStudent" method="post" class="container" novalidate>
    <div class="row">
        <div class="col-md-6 form-group mb-3">
            <label asp-for="FullName" class="control-label mb-2 text-teal fw-bold">Name</label>
            <input asp-for="FullName" class="form-control" required />
            <div class="invalid-feedback">
                Please provide a name.
            </div>
        </div>

        <div class="col-md-6 form-group mb-3">
            <label asp-for="DateOfBirth" class="control-label mb-2 text-teal fw-bold">Date of Birth</label>
            <input asp-for="DateOfBirth" class="form-control" type="date" required />
            <div class="invalid-feedback">
                Please provide a valid date of birth.
            </div>
        </div>

        <div class="col-md-6 form-group mb-3">
            <label asp-for="Gender" class="control-label mb-2 text-teal fw-bold">Gender</label>
            <select asp-for="Gender" asp-items="genderList" class="form-control" required>
                <option value="">Select Gender</option>
            </select>
            <div class="invalid-feedback">
                Please select a gender.
            </div>
        </div>

        <div class="col-md-6 form-group mb-3">
            <label asp-for="Address" class="control-label mb-2 text-teal fw-bold">Address</label>
            <input asp-for="Address" class="form-control" required />
            <div class="invalid-feedback">
                Please provide an address.
            </div>
        </div>

        <div class="col-md-6 form-group mb-3">
            <label asp-for="ContactNumber" class="control-label mb-2 text-teal fw-bold">Contact Number</label>
            <input asp-for="ContactNumber" class="form-control" required />
            <div class="invalid-feedback">
                Please provide a contact number.
            </div>
        </div>
    </div>

    <button type="button" class="btn btn-teal text-white fw-bold me-2" id="submitButton">Submit</button>
    <a asp-action="Index" class="btn btn-secondary">Back</a>
</form>

<!-- Bootstrap Modal for Confirmation -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirm Registration</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to register this student?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-teal text-white" id="confirmSubmit">Confirm</button>
            </div>
        </div>
    </div>
</div>

<style>
    .text-teal {
        color: teal;
    }

    .btn-teal {
        background-color: teal;
        border-color: teal;
    }

        .btn-teal:hover {
            background-color: #006666;
            border-color: #006666;
        }

    .invalid-feedback {
        display: none;
    }

    .was-validated .form-control:invalid {
        border-color: #dc3545;
    }

        .was-validated .form-control:invalid ~ .invalid-feedback {
            display: block;
        }
</style>

@section Scripts {
    <script>
        // Enable Bootstrap validation
        (function () {
            'use strict'
            window.addEventListener('load', function () {
                var forms = document.getElementsByTagName('form');
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Handle Submit button click to show the modal
        document.getElementById('submitButton').addEventListener('click', function (event) {
            var form = document.getElementById('registerForm');
            var isValid = form.checkValidity();
            if (isValid) {
                // Show the confirmation modal
                var confirmationModal = new bootstrap.Modal(document.getElementById('confirmationModal'));
                confirmationModal.show();
            } else {
                form.classList.add('was-validated'); // Show validation feedback if form is invalid
            }
        });

        // Handle the "Confirm" button in the modal
        document.getElementById('confirmSubmit').addEventListener('click', function () {
            var form = document.getElementById('registerForm');
            // Trigger form validation again before submission
            if (form.checkValidity()) {
                form.submit(); // Submit the form after confirmation
            }
        });
    </script>
}
